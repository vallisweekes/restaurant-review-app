{"ast":null,"code":"var _jsxFileName = \"/Users/vallisweekes/Documents/restaurant-review-app/src/Components/AppContainer/AppContainer.jsx\";\nimport React, { Component } from \"react\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport \"./app-container.css\";\nimport { paginate } from \"../../util/paginate\";\nimport Header from \"../Header\";\nimport ResultsContainer from \"../ResultsContainer/ResultsContainer\";\nimport { getMyRestaraunts } from \"../../util/getRMyRestaurants\";\n\nclass AppContainer extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.fetchPlaces = (mapProps, map) => {\n      const google = mapProps.google; // const userLocation = new google.maps.LatLng(this.props.lat, this.props.lng);\n\n      var request = {\n        placeId: \"ac24e81dbe9c912a499b75b1df6e69bf7fab7909\",\n        fields: [\"name\", \"rating\", \"formatted_phone_number\", \"geometry\"]\n      };\n      const service = new google.maps.places.PlacesService(map);\n      service.getDetails(request, getPlaces);\n\n      function getPlaces(results, status) {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n          console.log(\"Single place result\", results);\n        }\n      }\n    };\n\n    this.onIconClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.handleRatings = () => {\n      console.log(this.state.ratings);\n    };\n\n    this.state = {\n      googleResults: [],\n      myRestaurants: getMyRestaraunts(),\n      currentPage: 1,\n      pageSize: 5,\n      ratings: [5, 4, 3, 2, 1]\n    };\n    this.handleOpenNowFilter = this.handleOpenNowFilter.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n  }\n\n  componentDidMount() {// this.setState({\n    //   myRestaurants:\n    // });\n  }\n\n  handleOpenNowFilter() {}\n\n  handlePageChange(page) {\n    this.setState({\n      currentPage: page\n    });\n  }\n\n  render() {\n    // const { google } = this.props;\n    const _this$state = this.state,\n          allRestaruants = _this$state.myRestaurants,\n          pageSize = _this$state.pageSize,\n          currentPage = _this$state.currentPage;\n    const restaraunts = paginate(allRestaruants, currentPage, pageSize);\n    return React.createElement(\"div\", {\n      className: \"container-fluid app__containter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"app__container-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"main\", {\n      className: \"app__container-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(ResultsContainer, {\n      lat: this.props.lat,\n      lng: this.props.lng,\n      fetchPlaces: this.fetchPlaces,\n      myRestaurants: restaraunts,\n      onPageChange: this.handlePageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyA8Byy23oFligL0X1_WQYca0ABneIhxOow\"\n})(AppContainer);","map":{"version":3,"sources":["/Users/vallisweekes/Documents/restaurant-review-app/src/Components/AppContainer/AppContainer.jsx"],"names":["React","Component","GoogleApiWrapper","paginate","Header","ResultsContainer","getMyRestaraunts","AppContainer","constructor","props","fetchPlaces","mapProps","map","google","request","placeId","fields","service","maps","places","PlacesService","getDetails","getPlaces","results","status","PlacesServiceStatus","OK","console","log","onIconClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","handleRatings","ratings","googleResults","myRestaurants","currentPage","pageSize","handleOpenNowFilter","bind","handlePageChange","componentDidMount","page","render","allRestaruants","restaraunts","lat","lng","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport \"./app-container.css\";\nimport { paginate } from \"../../util/paginate\";\nimport Header from \"../Header\";\nimport ResultsContainer from \"../ResultsContainer/ResultsContainer\";\nimport { getMyRestaraunts } from \"../../util/getRMyRestaurants\";\n\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      googleResults: [],\n      myRestaurants: getMyRestaraunts(),\n      currentPage: 1,\n      pageSize: 5,\n      ratings: [5, 4, 3, 2, 1]\n    };\n\n    this.handleOpenNowFilter = this.handleOpenNowFilter.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n  }\n\n  fetchPlaces = (mapProps, map) => {\n    const { google } = mapProps;\n    // const userLocation = new google.maps.LatLng(this.props.lat, this.props.lng);\n    var request = {\n      placeId: \"ac24e81dbe9c912a499b75b1df6e69bf7fab7909\",\n      fields: [\"name\", \"rating\", \"formatted_phone_number\", \"geometry\"]\n    };\n\n    const service = new google.maps.places.PlacesService(map);\n    service.getDetails(request, getPlaces);\n\n    function getPlaces(results, status) {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        console.log(\"Single place result\", results);\n      }\n    }\n  };\n\n  // storeRestaurants = gPlacesRestaurants => {\n  //   console.log(\"G Results\", gPlacesRestaurants);\n  // };\n\n  onIconClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  handleRatings = () => {\n    console.log(this.state.ratings);\n  };\n\n  componentDidMount() {\n    // this.setState({\n    //   myRestaurants:\n    // });\n  }\n\n  handleOpenNowFilter() {}\n\n  handlePageChange(page) {\n    this.setState({\n      currentPage: page\n    });\n  }\n\n  render() {\n    // const { google } = this.props;\n\n    const { myRestaurants: allRestaruants, pageSize, currentPage } = this.state;\n\n    const restaraunts = paginate(allRestaruants, currentPage, pageSize);\n\n    return (\n      <div className=\"container-fluid app__containter\">\n        <header className=\"app__container-header\">\n          <Header />\n        </header>\n        <main className=\"app__container-results\">\n          <ResultsContainer\n            lat={this.props.lat}\n            lng={this.props.lng}\n            fetchPlaces={this.fetchPlaces}\n            myRestaurants={restaraunts}\n            onPageChange={this.handlePageChange}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyA8Byy23oFligL0X1_WQYca0ABneIhxOow\"\n})(AppContainer);\n"]},"metadata":{},"sourceType":"module"}