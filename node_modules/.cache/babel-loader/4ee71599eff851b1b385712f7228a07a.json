{"ast":null,"code":"var _jsxFileName = \"/Users/vallisweekes/Documents/restaurant-review-app/src/Components/AppContainer/AppContainer.jsx\";\nimport React, { Component } from \"react\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport \"./app-container.css\";\nimport { paginate } from \"../../util/paginate\";\nimport Header from \"../Header\";\nimport ResultsContainer from \"../ResultsContainer/ResultsContainer\";\nimport { getMyRestaraunts } from \"../../util/getRMyRestaurants\";\n\nclass AppContainer extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.fetchPlaces = (mapProps, map) => {\n      const google = mapProps.google;\n      console.log(google);\n      const userLocation = new google.maps.LatLng(this.props.lat, this.props.lng);\n      const request = {\n        location: userLocation,\n        radius: \"900\",\n        type: [\"restaurant\"]\n      };\n      const service = new google.maps.places.PlacesService(map);\n      service.nearbySearch(request, getPlaces);\n\n      function getPlaces(results, status) {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n          console.log(Array.from(results));\n        }\n      }\n    };\n\n    this.onIconClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      currentPage: 1,\n      pageSize: 5,\n      ratings: [5, 4, 3, 2, 1]\n    };\n    this.handleRatings = this.handleRatings.bind(this);\n    this.handleOpenNowFilter = this.handleOpenNowFilter.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n    this.fetchPlaces = this.fetchPlaces.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(getMyRestaraunts);\n  }\n\n  handleRatings() {\n    console.log(this.state.ratings);\n  } // storeRestaurants = gPlacesRestaurants => {\n  //   console.log(\"this is the places\", gPlacesRestaurants);\n  //   // this.setState({\n  //   //   googleRestaurants: gPlacesRestaurants\n  //   // });\n  // };\n\n\n  handleOpenNowFilter() {}\n\n  handlePageChange(page) {\n    this.setState({\n      currentPage: page\n    });\n  }\n\n  render() {\n    const google = this.props.google;\n    const _this$state = this.state,\n          allRestaruants = _this$state.googleRestaurants,\n          pageSize = _this$state.pageSize,\n          currentPage = _this$state.currentPage;\n    const restaraunts = paginate(allRestaruants, currentPage, pageSize);\n    return React.createElement(\"div\", {\n      className: \"container-fluid app__containter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"app__container-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"main\", {\n      className: \"app__container-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(ResultsContainer, {\n      lat: this.props.lat,\n      lng: this.props.lng,\n      fetchPlaces: this.fetchPlaces,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyA8Byy23oFligL0X1_WQYca0ABneIhxOow\"\n})(AppContainer);","map":{"version":3,"sources":["/Users/vallisweekes/Documents/restaurant-review-app/src/Components/AppContainer/AppContainer.jsx"],"names":["React","Component","GoogleApiWrapper","paginate","Header","ResultsContainer","getMyRestaraunts","AppContainer","constructor","props","fetchPlaces","mapProps","map","google","console","log","userLocation","maps","LatLng","lat","lng","request","location","radius","type","service","places","PlacesService","nearbySearch","getPlaces","results","status","PlacesServiceStatus","OK","Array","from","onIconClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","currentPage","pageSize","ratings","handleRatings","bind","handleOpenNowFilter","handlePageChange","componentDidMount","page","render","allRestaruants","googleRestaurants","restaraunts","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport \"./app-container.css\";\nimport { paginate } from \"../../util/paginate\";\nimport Header from \"../Header\";\nimport ResultsContainer from \"../ResultsContainer/ResultsContainer\";\nimport { getMyRestaraunts } from \"../../util/getRMyRestaurants\";\n\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1,\n      pageSize: 5,\n      ratings: [5, 4, 3, 2, 1]\n    };\n\n    this.handleRatings = this.handleRatings.bind(this);\n    this.handleOpenNowFilter = this.handleOpenNowFilter.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n\n    this.fetchPlaces = this.fetchPlaces.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(getMyRestaraunts);\n  }\n\n  fetchPlaces = (mapProps, map) => {\n    const { google } = mapProps;\n    console.log(google);\n    const userLocation = new google.maps.LatLng(this.props.lat, this.props.lng);\n    const request = {\n      location: userLocation,\n      radius: \"900\",\n      type: [\"restaurant\"]\n    };\n\n    const service = new google.maps.places.PlacesService(map);\n    service.nearbySearch(request, getPlaces);\n\n    function getPlaces(results, status) {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        console.log(Array.from(results));\n      }\n    }\n  };\n\n  onIconClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  handleRatings() {\n    console.log(this.state.ratings);\n  }\n\n  // storeRestaurants = gPlacesRestaurants => {\n  //   console.log(\"this is the places\", gPlacesRestaurants);\n  //   // this.setState({\n  //   //   googleRestaurants: gPlacesRestaurants\n  //   // });\n  // };\n\n  handleOpenNowFilter() {}\n\n  handlePageChange(page) {\n    this.setState({\n      currentPage: page\n    });\n  }\n\n  render() {\n    const { google } = this.props;\n\n    const {\n      googleRestaurants: allRestaruants,\n\n      pageSize,\n      currentPage\n    } = this.state;\n\n    const restaraunts = paginate(allRestaruants, currentPage, pageSize);\n\n    return (\n      <div className=\"container-fluid app__containter\">\n        <header className=\"app__container-header\">\n          <Header />\n        </header>\n        <main className=\"app__container-results\">\n          <ResultsContainer\n            lat={this.props.lat}\n            lng={this.props.lng}\n            fetchPlaces={this.fetchPlaces}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyA8Byy23oFligL0X1_WQYca0ABneIhxOow\"\n})(AppContainer);\n"]},"metadata":{},"sourceType":"module"}