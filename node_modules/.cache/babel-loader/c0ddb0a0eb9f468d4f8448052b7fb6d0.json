{"ast":null,"code":"var _jsxFileName = \"/Users/vallisweekes/Documents/restaurant-review-app/src/Components/AppContainer/AppContainer.jsx\";\nimport React, { Component } from \"react\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport \"./app-container.css\";\nimport { paginate } from \"../../util/paginate\";\nimport Header from \"../Header\";\nimport ResultsContainer from \"../ResultsContainer/ResultsContainer\";\nimport { getMyRestaraunts } from \"../../util/getRMyRestaurants\";\n\nclass AppContainer extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.fetchPlaces = (mapProps, map) => {\n      const google = mapProps.google;\n      const userLocation = new google.maps.LatLng(this.props.lat, this.props.lng);\n      const request = {\n        location: userLocation,\n        radius: \"900\",\n        type: [\"restaurant\"]\n      };\n      const service = new google.maps.places.PlacesService(map);\n      service.nearbySearch(request, getPlaces);\n\n      function getPlaces(results, status) {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n          const place = Array.from(results);\n          console.log(\"Places returned from GAPI\", place);\n          const placeId = place.map(placeResult => placeResult.id);\n\n          for (let i = 0; i < placeId.length; i++) {\n            const request = {\n              placeId: placeId[i],\n              fields: [\"reviews\"]\n            };\n            console.log(\"Request detail for each places\", request);\n            service.getDetails(request, getReviews);\n\n            function getReviews(review, status) {\n              if (status === google.maps.places.PlacesServiceStatus.OK) {\n                console.log(\"Reviews Return\", review);\n              }\n            }\n          }\n        }\n      }\n    };\n\n    this.onIconClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.handleRatings = () => {\n      console.log(this.state.ratings);\n    };\n\n    this.state = {\n      googleResults: [],\n      myRestaurants: getMyRestaraunts(),\n      currentPage: 1,\n      pageSize: 5,\n      ratings: [5, 4, 3, 2, 1]\n    };\n    this.handleOpenNowFilter = this.handleOpenNowFilter.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n  }\n\n  componentDidMount() {// this.setState({\n    //   myRestaurants:\n    // });\n  }\n\n  handleOpenNowFilter() {}\n\n  handlePageChange(page) {\n    this.setState({\n      currentPage: page\n    });\n  }\n\n  render() {\n    // const { google } = this.props;\n    const _this$state = this.state,\n          allRestaruants = _this$state.myRestaurants,\n          pageSize = _this$state.pageSize,\n          currentPage = _this$state.currentPage;\n    const restaraunts = paginate(allRestaruants, currentPage, pageSize);\n    return React.createElement(\"div\", {\n      className: \"container-fluid app__containter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"app__container-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"main\", {\n      className: \"app__container-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(ResultsContainer, {\n      lat: this.props.lat,\n      lng: this.props.lng,\n      fetchPlaces: this.fetchPlaces,\n      myRestaurants: restaraunts,\n      onPageChange: this.handlePageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyA8Byy23oFligL0X1_WQYca0ABneIhxOow\"\n})(AppContainer);","map":{"version":3,"sources":["/Users/vallisweekes/Documents/restaurant-review-app/src/Components/AppContainer/AppContainer.jsx"],"names":["React","Component","GoogleApiWrapper","paginate","Header","ResultsContainer","getMyRestaraunts","AppContainer","constructor","props","fetchPlaces","mapProps","map","google","userLocation","maps","LatLng","lat","lng","request","location","radius","type","service","places","PlacesService","nearbySearch","getPlaces","results","status","PlacesServiceStatus","OK","place","Array","from","console","log","placeId","placeResult","id","i","length","fields","getDetails","getReviews","review","onIconClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","handleRatings","ratings","googleResults","myRestaurants","currentPage","pageSize","handleOpenNowFilter","bind","handlePageChange","componentDidMount","page","render","allRestaruants","restaraunts","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport \"./app-container.css\";\nimport { paginate } from \"../../util/paginate\";\nimport Header from \"../Header\";\nimport ResultsContainer from \"../ResultsContainer/ResultsContainer\";\nimport { getMyRestaraunts } from \"../../util/getRMyRestaurants\";\n\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      googleResults: [],\n      myRestaurants: getMyRestaraunts(),\n      currentPage: 1,\n      pageSize: 5,\n      ratings: [5, 4, 3, 2, 1]\n    };\n\n    this.handleOpenNowFilter = this.handleOpenNowFilter.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n  }\n\n  fetchPlaces = (mapProps, map) => {\n    const { google } = mapProps;\n    const userLocation = new google.maps.LatLng(this.props.lat, this.props.lng);\n    const request = {\n      location: userLocation,\n      radius: \"900\",\n      type: [\"restaurant\"]\n    };\n\n    const service = new google.maps.places.PlacesService(map);\n    service.nearbySearch(request, getPlaces);\n\n    function getPlaces(results, status) {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        const place = Array.from(results);\n\n        console.log(\"Places returned from GAPI\", place);\n        const placeId = place.map(placeResult => placeResult.id);\n        for (let i = 0; i < placeId.length; i++) {\n          const request = {\n            placeId: placeId[i],\n            fields: [\"reviews\"]\n          };\n          console.log(\"Request detail for each places\", request);\n          service.getDetails(request, getReviews);\n          function getReviews(review, status) {\n            if (status === google.maps.places.PlacesServiceStatus.OK) {\n              console.log(\"Reviews Return\", review);\n            }\n          }\n        }\n      }\n    }\n  };\n\n  // storeRestaurants = gPlacesRestaurants => {\n  //   console.log(\"G Results\", gPlacesRestaurants);\n  // };\n\n  onIconClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  handleRatings = () => {\n    console.log(this.state.ratings);\n  };\n\n  componentDidMount() {\n    // this.setState({\n    //   myRestaurants:\n    // });\n  }\n\n  handleOpenNowFilter() {}\n\n  handlePageChange(page) {\n    this.setState({\n      currentPage: page\n    });\n  }\n\n  render() {\n    // const { google } = this.props;\n\n    const { myRestaurants: allRestaruants, pageSize, currentPage } = this.state;\n\n    const restaraunts = paginate(allRestaruants, currentPage, pageSize);\n\n    return (\n      <div className=\"container-fluid app__containter\">\n        <header className=\"app__container-header\">\n          <Header />\n        </header>\n        <main className=\"app__container-results\">\n          <ResultsContainer\n            lat={this.props.lat}\n            lng={this.props.lng}\n            fetchPlaces={this.fetchPlaces}\n            myRestaurants={restaraunts}\n            onPageChange={this.handlePageChange}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyA8Byy23oFligL0X1_WQYca0ABneIhxOow\"\n})(AppContainer);\n"]},"metadata":{},"sourceType":"module"}