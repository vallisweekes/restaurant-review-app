{"ast":null,"code":"var _jsxFileName = \"/Users/vallisweekes/Documents/restaurant-review-app/src/appContainer/AppContainer.js\";\nimport React, { Component } from \"react\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport { paginate } from \"../appContainer/util/paginate\";\nimport Header from \"./Components/Header/Header\";\nimport ResultsContainer from \"../appContainer/Components/ResultsContainer/ResultsContainer.js\"; // import { getGeoLocation } from \"./util/geoLocation\";\n\nclass AppContainer extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onIconClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.storeRestaurants = gPlacesRestaurants => {\n      this.setState({\n        googleRestaurants: gPlacesRestaurants\n      });\n    };\n\n    this.state = {\n      restaraunts: [],\n      restaurantsList: [],\n      lat: null,\n      lng: null,\n      currentPage: 1,\n      pageSize: 5,\n      ratings: [5, 4, 3, 2, 1]\n    };\n    this.handleRatings = this.handleRatings.bind(this);\n    this.handleOpenNowFilter = this.handleOpenNowFilter.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      lat: this.props.lat,\n      lng: this.props.lng\n    });\n  }\n\n  handleRatings() {\n    console.log(this.state.ratings);\n  }\n\n  handleOpenNowFilter() {}\n\n  handlePageChange(page) {\n    this.setState({\n      currentPage: page\n    });\n  }\n\n  render() {\n    const google = this.props.google;\n    console.log(\"Render meth Results Container\", this.state);\n    const _this$state = this.state,\n          allRestaruants = _this$state.googleRestaurants,\n          ratings = _this$state.ratings,\n          pageSize = _this$state.pageSize,\n          currentPage = _this$state.currentPage;\n    const restaraunts = paginate(allRestaruants, currentPage, pageSize);\n    const _this$props = this.props,\n          lat = _this$props.lat,\n          lng = _this$props.lng;\n    return React.createElement(\"div\", {\n      className: \"container-fluid app__containter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"app__container-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"main\", {\n      className: \"app__container-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(ResultsContainer, {\n      lat: this.state.lat,\n      lng: this.state.lng,\n      googlgeAPi: google,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyA8Byy23oFligL0X1_WQYca0ABneIhxOow\"\n})(AppContainer);","map":{"version":3,"sources":["/Users/vallisweekes/Documents/restaurant-review-app/src/appContainer/AppContainer.js"],"names":["React","Component","GoogleApiWrapper","paginate","Header","ResultsContainer","AppContainer","constructor","props","onIconClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","storeRestaurants","gPlacesRestaurants","googleRestaurants","restaraunts","restaurantsList","lat","lng","currentPage","pageSize","ratings","handleRatings","bind","handleOpenNowFilter","handlePageChange","componentDidMount","console","log","page","render","google","allRestaruants","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport { paginate } from \"../appContainer/util/paginate\";\nimport Header from \"./Components/Header/Header\";\nimport ResultsContainer from \"../appContainer/Components/ResultsContainer/ResultsContainer.js\";\n// import { getGeoLocation } from \"./util/geoLocation\";\n\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restaraunts: [],\n      restaurantsList: [],\n      lat: null,\n      lng: null,\n      currentPage: 1,\n      pageSize: 5,\n      ratings: [5, 4, 3, 2, 1]\n    };\n\n    this.handleRatings = this.handleRatings.bind(this);\n    this.handleOpenNowFilter = this.handleOpenNowFilter.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      lat: this.props.lat,\n      lng: this.props.lng\n    });\n  }\n\n  onIconClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  handleRatings() {\n    console.log(this.state.ratings);\n  }\n  storeRestaurants = gPlacesRestaurants => {\n    this.setState({\n      googleRestaurants: gPlacesRestaurants\n    });\n  };\n  handleOpenNowFilter() {}\n\n  handlePageChange(page) {\n    this.setState({\n      currentPage: page\n    });\n  }\n\n  render() {\n    const { google } = this.props;\n    console.log(\"Render meth Results Container\", this.state);\n    const {\n      googleRestaurants: allRestaruants,\n      ratings,\n      pageSize,\n      currentPage\n    } = this.state;\n\n    const restaraunts = paginate(allRestaruants, currentPage, pageSize);\n\n    const { lat, lng } = this.props;\n\n    return (\n      <div className=\"container-fluid app__containter\">\n        <header className=\"app__container-header\">\n          <Header />\n        </header>\n        <main className=\"app__container-results\">\n          <ResultsContainer\n            lat={this.state.lat}\n            lng={this.state.lng}\n            googlgeAPi={google}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyA8Byy23oFligL0X1_WQYca0ABneIhxOow\"\n})(AppContainer);\n"]},"metadata":{},"sourceType":"module"}