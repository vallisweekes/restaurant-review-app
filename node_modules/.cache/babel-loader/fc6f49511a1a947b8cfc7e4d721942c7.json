{"ast":null,"code":"import { Map, GoogleApiWrapper } from \"google-maps-react\";\nexport function fetchPlaces(mapProps, map) {\n  const google = mapProps.google;\n  console.log(google);\n  console.log(map);\n  const userLocation = new google.maps.LatLng(this.props.lat, this.props.lng);\n  const request = {\n    location: userLocation,\n    radius: \"500\",\n    type: [\"restaurant\"]\n  };\n  const service = new google.maps.places.PlacesService(map);\n  service.nearbySearch(request, getPlaces);\n  let place;\n\n  function getPlaces(results, status) {\n    if (status === google.maps.places.PlacesServiceStatus.OK) {\n      place = Array.from(results);\n      console.log(place);\n    }\n  }\n}","map":{"version":3,"sources":["/Users/vallisweekes/Documents/restaurant-review-app/src/utils/getGoogleMapApi.js"],"names":["Map","GoogleApiWrapper","fetchPlaces","mapProps","map","google","console","log","userLocation","maps","LatLng","props","lat","lng","request","location","radius","type","service","places","PlacesService","nearbySearch","getPlaces","place","results","status","PlacesServiceStatus","OK","Array","from"],"mappings":"AAAA,SAASA,GAAT,EAAcC,gBAAd,QAAsC,mBAAtC;AAEA,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,GAA/B,EAAoC;AAAA,QAC/BC,MAD+B,GACpBF,QADoB,CAC/BE,MAD+B;AAEvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEA,QAAMI,YAAY,GAAG,IAAIH,MAAM,CAACI,IAAP,CAAYC,MAAhB,CAAuB,KAAKC,KAAL,CAAWC,GAAlC,EAAuC,KAAKD,KAAL,CAAWE,GAAlD,CAArB;AACA,QAAMC,OAAO,GAAG;AACZC,IAAAA,QAAQ,EAAEP,YADE;AAEZQ,IAAAA,MAAM,EAAE,KAFI;AAGZC,IAAAA,IAAI,EAAE,CAAC,YAAD;AAHM,GAAhB;AAMA,QAAMC,OAAO,GAAG,IAAIb,MAAM,CAACI,IAAP,CAAYU,MAAZ,CAAmBC,aAAvB,CAAqChB,GAArC,CAAhB;AACAc,EAAAA,OAAO,CAACG,YAAR,CAAqBP,OAArB,EAA8BQ,SAA9B;AACA,MAAIC,KAAJ;;AAEA,WAASD,SAAT,CAAmBE,OAAnB,EAA4BC,MAA5B,EAAoC;AAChC,QAAIA,MAAM,KAAKpB,MAAM,CAACI,IAAP,CAAYU,MAAZ,CAAmBO,mBAAnB,CAAuCC,EAAtD,EAA0D;AACtDJ,MAAAA,KAAK,GAAGK,KAAK,CAACC,IAAN,CAAWL,OAAX,CAAR;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,KAAZ;AACH;AACJ;AACJ","sourcesContent":["import { Map, GoogleApiWrapper } from \"google-maps-react\";\n\nexport function fetchPlaces(mapProps, map) {\n    const { google } = mapProps;\n    console.log(google);\n    console.log(map);\n\n    const userLocation = new google.maps.LatLng(this.props.lat, this.props.lng);\n    const request = {\n        location: userLocation,\n        radius: \"500\",\n        type: [\"restaurant\"]\n    };\n\n    const service = new google.maps.places.PlacesService(map);\n    service.nearbySearch(request, getPlaces);\n    let place;\n\n    function getPlaces(results, status) {\n        if (status === google.maps.places.PlacesServiceStatus.OK) {\n            place = Array.from(results);\n            console.log(place);\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}