{"ast":null,"code":"var _jsxFileName = \"/Users/sid/sahib/oc/restaurant-review-app/src/Components/AppContainer/AppContainer.js\";\nimport React, { Component } from \"react\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport \"./app-container.css\";\nimport { paginate } from \"../../util/paginate\";\nimport Header from \"../Header\";\nimport ResultsContainer from \"../ResultsContainer/ResultsContainer\";\nimport { getMyRestaraunts } from \"../../util/getRMyRestaurants\";\n\nclass AppContainer extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.fetchPlaces = (mapProps, map) => {\n      // SAHIB: Move this to index file\n      const google = mapProps.google;\n      const _this$props = this.props,\n            addRestaurants = _this$props.addRestaurants,\n            allRestaurantsLoaded = _this$props.allRestaurantsLoaded;\n      const userLocation = new google.maps.LatLng(this.props.lat, this.props.lng);\n      const request = {\n        location: userLocation,\n        radius: \"900\",\n        type: [\"restaurant\"]\n      }; // let resultsArr = [];\n\n      const service = new google.maps.places.PlacesService(map);\n      service.nearbySearch(request, getPlaces);\n\n      function getPlaces(myResults, status, pagination) {\n        if (status === \"OK\") {\n          if (pagination.hasNextPage) {\n            pagination.nextPage();\n          } else {\n            allRestaurantsLoaded();\n          }\n        }\n\n        console.log(\"These are my places 🎷\", pagination);\n        const placeIds = myResults.map(res => {\n          return res.place_id;\n        });\n        addRestaurants(myResults);\n      }\n\n      function resultsInArray(results) {\n        console.log(\"Get info reults 😎\", results);\n      }\n    };\n\n    this.onIconClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({// showingInfoWindow: false,\n          // activeMarker: null\n        });\n      }\n    };\n\n    this.handleRatings = () => {\n      console.log(this.state.ratings);\n    };\n\n    this.state = {\n      googleResults: [],\n      myRestaurants: getMyRestaraunts(),\n      currentPage: 1,\n      pageSize: 5,\n      ratings: [5, 4, 3, 2, 1]\n    };\n  }\n\n  componentDidMount() {// this.storePlaceId = (...placeIds) => {\n    //   console.log(\"First Initial Results All 📌\", placeIds);\n    //   placeIds.map(() => {});\n    // };\n    // this.getDetails = result => {\n    //   console.log(\"Individual Restaurants 📍\", result);\n    // };\n  }\n\n  handleOpenNowFilter() {}\n\n  handlePageChange(page) {\n    this.setState({\n      currentPage: page\n    });\n  }\n\n  render() {\n    // const { google } = this.props;\n    const _this$state = this.state,\n          allRestaruants = _this$state.myRestaurants,\n          pageSize = _this$state.pageSize,\n          currentPage = _this$state.currentPage;\n    const restaraunts = paginate(allRestaruants, currentPage, pageSize);\n    return React.createElement(\"div\", {\n      className: \"container-fluid app__containter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"app__container-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"main\", {\n      className: \"app__container-results\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(ResultsContainer, {\n      lat: this.props.lat,\n      lng: this.props.lng,\n      fetchPlaces: this.fetchPlaces,\n      myRestaurants: restaraunts,\n      onPageChange: this.handlePageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCcMtA-_NBxt6cD8uefrk6EFlv-2YfXtS0\"\n})(AppContainer);","map":{"version":3,"sources":["/Users/sid/sahib/oc/restaurant-review-app/src/Components/AppContainer/AppContainer.js"],"names":["React","Component","GoogleApiWrapper","paginate","Header","ResultsContainer","getMyRestaraunts","AppContainer","constructor","props","fetchPlaces","mapProps","map","google","addRestaurants","allRestaurantsLoaded","userLocation","maps","LatLng","lat","lng","request","location","radius","type","service","places","PlacesService","nearbySearch","getPlaces","myResults","status","pagination","hasNextPage","nextPage","console","log","placeIds","res","place_id","resultsInArray","results","onIconClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","handleRatings","ratings","googleResults","myRestaurants","currentPage","pageSize","componentDidMount","handleOpenNowFilter","handlePageChange","page","render","allRestaruants","restaraunts","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { GoogleApiWrapper } from \"google-maps-react\";\nimport \"./app-container.css\";\nimport { paginate } from \"../../util/paginate\";\nimport Header from \"../Header\";\nimport ResultsContainer from \"../ResultsContainer/ResultsContainer\";\nimport { getMyRestaraunts } from \"../../util/getRMyRestaurants\";\n\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      googleResults: [],\n      myRestaurants: getMyRestaraunts(),\n      currentPage: 1,\n      pageSize: 5,\n      ratings: [5, 4, 3, 2, 1]\n    };\n  }\n\n  fetchPlaces = (mapProps, map) => { // SAHIB: Move this to index file\n    const { google } = mapProps;\n    const { addRestaurants, allRestaurantsLoaded } = this.props;\n\n    const userLocation = new google.maps.LatLng(this.props.lat, this.props.lng);\n    const request = {\n      location: userLocation,\n      radius: \"900\",\n      type: [\"restaurant\"]\n    };\n\n    // let resultsArr = [];\n\n    const service = new google.maps.places.PlacesService(map);\n    service.nearbySearch(request, getPlaces);\n    function getPlaces(myResults, status, pagination) {\n      if (status === \"OK\") {\n        if (pagination.hasNextPage) {\n          pagination.nextPage();\n        } else {\n          allRestaurantsLoaded();\n        }\n      }\n      console.log(\"These are my places 🎷\", pagination);\n      const placeIds = myResults.map(res => {\n        return res.place_id;\n      });\n\n      addRestaurants(myResults);\n    }\n\n    function resultsInArray(results) {\n      console.log(\"Get info reults 😎\", results);\n    }\n  };\n\n  componentDidMount() {\n    // this.storePlaceId = (...placeIds) => {\n    //   console.log(\"First Initial Results All 📌\", placeIds);\n    //   placeIds.map(() => {});\n    // };\n    // this.getDetails = result => {\n    //   console.log(\"Individual Restaurants 📍\", result);\n    // };\n  }\n\n  onIconClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        // showingInfoWindow: false,\n        // activeMarker: null\n      });\n    }\n  };\n\n  handleRatings = () => {\n    console.log(this.state.ratings);\n  };\n\n  handleOpenNowFilter() {}\n\n  handlePageChange(page) {\n    this.setState({\n      currentPage: page\n    });\n  }\n\n  render() {\n    // const { google } = this.props;\n\n    const { myRestaurants: allRestaruants, pageSize, currentPage } = this.state;\n\n    const restaraunts = paginate(allRestaruants, currentPage, pageSize);\n\n    return (\n      <div className=\"container-fluid app__containter\">\n        <header className=\"app__container-header\">\n          <Header />\n        </header>\n        <main className=\"app__container-results\">\n          <ResultsContainer\n            lat={this.props.lat}\n            lng={this.props.lng}\n            fetchPlaces={this.fetchPlaces}\n            myRestaurants={restaraunts}\n            onPageChange={this.handlePageChange}\n          />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCcMtA-_NBxt6cD8uefrk6EFlv-2YfXtS0\"\n})(AppContainer);\n"]},"metadata":{},"sourceType":"module"}